@model zapread.com.Models.Admin.AdminAchievementsViewModel

@{
    ViewBag.Title = "Admin - Achievements";
}

<div class="modal fade" id="ModalFileUpload" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-header">
            <h5 class="modal-title">Upload image</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Upload macaroon</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AdminUploadAchievementImage", "Admin", FormMethod.Post, new { @class = "dropzone", id = "dropzoneForm", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="fallback">
                        <input name="file" type="file" />
                        <input id="mt" name="macaroonType" type="hidden" value="test" />
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Done</button>
            </div>
        </div>
    </div>
</div>

<div class="wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <br />
        <h2>Administration</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Admin</a></li>
            <li class="breadcrumb-item active">Achievements</li>
        </ol>
        <small>Website administration page.</small>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="ibox float-e-margins">
        </div>
    </div>
</div>

<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-lg-1">
        </div>
        <div class="col-lg-10">
            <div class="ibox-content no-padding">
                <div class="wrapper p-md">
                    <h3>Achievements</h3>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Name</label>
                        <div class="col-sm-10">
                            <input id="aName" type="text" class="form-control">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Description</label>
                        <div class="col-sm-10">
                            <input id="aDescription" type="text" class="form-control">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Value</label>
                        <div class="col-sm-10">
                            <input id="aValue" type="text" class="form-control">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Image</label>
                        <div class="col-sm-10">
                            <div class="row">
                                <div class="col-sm-1">
                                    <img id="aImage" src="/Img/AchievementImage/1/" />
                                </div>
                                <div class="col-sm-11">
                                    <a href="#" class="btn btn-sm btn-primary" onclick="uploadImage();">Upload Image</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <br />
                    <a href="" class="btn btn-primary btn-outline" onclick="add()">Add</a>
                    <br />
                    <table id="achievementsTable" class="table table-striped" style="width:100%">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Value</th>
                                <th>Awarded</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/bundles/css/datatables")
    @Styles.Render("~/Content/plugins/dropzone/dropZoneStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dropZone")
    @Scripts.Render("~/bundles/datatables")

    <script type="text/javascript">

        var id = -1;

        Dropzone.options.dropzoneForm = {
            paramName: "file", // The name that will be used to transfer the file
            maxFilesize: 5, // MB
            acceptedFiles: ".png",
            maxFiles: 1,
            addRemoveLinks: true,
            init: function () {
                this.on("sending", function (file, xhr, formData) {
                    formData.append("id", id);
                    console.log(formData)
                });
                this.on("addedfile", function () {
                    if (this.files[1] != null) {
                        this.removeFile(this.files[0]);
                    }
                });
                this.on("success", function (file, response) {
                    console.log(response.Id);
                    //alert(response.Id);
                    id = response.Id;
                    $('#aImage').attr('src', '/Img/AchievementImage/'+id+'/');
                })
            },
            dictDefaultMessage: "<strong>Drop files here or click to upload. </strong>"
        };

        var add = function () {
            var aName = $('#aName').val();
            var aDescription = $('#aDescription').val();
            var aValue = $('#aValue').val();
            var msg = { id: id, name: aName, description: aDescription, value: aValue };

            $.ajax({
                async: true,
                type: "POST",
                url: "/Admin/AddAchievement",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(msg),
                success: function (response) {
                    achievementstable.ajax.reload();
                },
                failure: function (response) {
                    //alert("failure " + JSON.stringify(response));
                },
                error: function (response) {
                    //alert("error " + JSON.stringify(response));
                }
            });
            return false;
        }

        var delAchievement = function (item) {
            var msg = { id: item };
            $.ajax({
                async: true,
                type: "POST",
                url: "/Admin/DeleteAchievement",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(msg),
                success: function (response) {
                    achievementstable.ajax.reload(null, false);
                },
                failure: function (response) {
                    //alert("failure " + JSON.stringify(response));
                },
                error: function (response) {
                    //alert("error " + JSON.stringify(response));
                }
            });
            return false;
        };

        var uploadImage = function () {
            console.log(id);
            $('#ModalFileUpload').modal('show');
            return false;
        };

        var editAchDescription = function (id) {
            swal({
                text: 'Enter new description',
                content: {
                    element: 'input',
                    attributes: {
                        defaultValue: $('#acd_' + id).html(),
                    }
                },
                buttons: {
                    cancel: true,
                    confirm: "Ok",
                    closeModal: false,
                },
            })
            .then(description => {
                if (!description) throw null;
                $.post("@Url.Action("AdminUpdateAchievementDescription", "Admin")",
                { "id": id, "description": description },
                function (data) {
                    if (data.success) {
                        achievementstable.ajax.reload();
                        swal("Description has been updated!", {
                            icon: "success"
                        });
                    }
                    else {
                        swal("Error", "Error updating description: " + data.message, "error");
                    }
                });
            })
            .catch(err => {
                if (err) {
                    swal("Error", "Error updating description.", "error");
                } else {
                    swal.stopLoading();
                    swal.close();
                }
            });
            return false;
        };

        var editAchName = function (id) {
            swal({
                text: 'Enter new name',
                content: {
                    element: 'input',
                    attributes: {
                        defaultValue: $('#acn_' + id).html(),
                    }
                },
                buttons: {
                    cancel: true,
                    confirm: "Ok",
                    closeModal: false,
                },
            })
            .then(name => {
                if (!name) throw null;
                $.post("@Url.Action("AdminUpdateAchievementName", "Admin")",
                { "id": id, "name": name },
                function (data) {
                    if (data.success) {
                        achievementstable.ajax.reload();
                        swal("Name has been updated!", {
                            icon: "success",
                        });
                    }
                    else {
                        swal("Error", "Error updating name: " + data.message, "error");
                    }
                });
            })
            .catch(err => {
                if (err) {
                    swal("Error", "Error updating name.", "error");
                } else {
                    swal.stopLoading();
                    swal.close();
                }
            });
            return false;
        };

        var grantAchievement = function (id) {
            swal({
                text: 'Enter user name',
                content: {
                    element: 'input',
                    attributes: {
                        defaultValue: '',
                    }
                },
                buttons: {
                    cancel: true,
                    confirm: "Ok",
                    closeModal: false,
                },
            })
            .then(name => {
                if (!name) throw null;
                $.post("@Url.Action("AdminGrantAchievement", "Admin")",
                { "id": id, "username": name },
                function (data) {
                    if (data.success) {
                        achievementstable.ajax.reload();
                        swal("Achievement has been granted!", {
                            icon: "success",
                        });
                    }
                    else {
                        swal("Error", "Error granting: " + data.message, "error");
                    }
                });
            })
            .catch(err => {
                if (err) {
                    swal("Error", "Error granting.", "error");
                } else {
                    swal.stopLoading();
                    swal.close();
                }
            });
            return false;
        };

        var achievementstable = {};
        $(document).ready(function () {
            achievementstable = $('#achievementsTable').DataTable({
                "searching": false,
                "lengthChange": false,
                "pageLength": 10,
                "processing": true,
                "serverSide": true,
                "sDom": '<"row view-filter"<"col-sm-12"<"pull-left"l><"pull-right"f><"clearfix">>>t<"row view-pager"<"col-sm-12"<"text-center"ip>>>',
                "ajax": {
                    type: "POST",
                    contentType: "application/json",
                    url: "/Admin/GetAchievements",
                    data: function (d) {
                        return JSON.stringify(d);
                    }
                },
                "columns": [
                    {
                        //"data": "Id",
                        "data": null,
                        "orderable": true,
                        "mRender": function (data, type, row) {
                            return "<a href='javascript:void(0);' onclick='editAchImage(" + data.Id + ")'><i class='fa fa-edit fa-2x text-info'></i></a>"
                            + data.Id + ": <img src='/Img/AchievementImage/" + data.Id + "/'>";
                        }
                    },
                    {
                        //"data": "Name",
                        "data": null,
                        "orderable": true,
                        "mRender": function (data, type, row) {
                            return "<a href='javascript:void(0);' onclick='editAchName(" + data.Id + ")'><i class='fa fa-edit fa-2x text-warning'></i></a>"
                                + "<span id='acn_" + data.Id + "'>" + data.Name + "</span>";
                        }
                    },
                    {
                        //"data": "Description",
                        "data": null,
                        "orderable": false,
                        "mRender": function (data, type, row) {
                            return "<a href='javascript:void(0);' onclick='editAchDescription(" + data.Id + ")'><i class='fa fa-edit fa-2x text-info'></i></a>"
                                + "<span id='acd_" + data.Id + "'>" + data.Description + "</span>";
                        }
                    },
                    {
                        "data": "Value",
                        "orderable": false
                    },
                    {
                        "data": "Awarded",
                        "orderable": false
                    },
                    {
                        "data": null, // Actions
                        "orderable": false,
                        "mRender": function (data, type, row) {
                            //alert(JSON.stringify(data));
                            return "<a href='javascript:void(0);' onclick='delAchievement(" + data.Id + ")'><i class='fa fa-trash fa-2x text-danger'></i></a>"
                                + "&nbsp;&nbsp;"
                                + "<a href='javascript:void(0);' onclick='grantAchievement(" + data.Id + ")'><i class='fa fa-user-plus fa-2x text-info'></i></a>";
                        }
                    }
                ]
            });
        });
    </script>
}
