@model zapread.com.Models.ChatMessagesViewModel
@{
	ViewBag.Title = "Chat with " + @Model.OtherUser.Name;
}
<div class="wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <br />
        <h2>Chat</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/Messages/">Messages</a></li>
            <li class="breadcrumb-item active">Chat</li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-content">
                    Your private chats with @Model.OtherUser.Name
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3">
        </div>
        <div class="col-lg-6">
            <div class="ibox chat-view">
                <div class="ibox-title">
                    <small class="float-right text-muted">Last message:  @if (Model.Messages.Count() > 0) {<span class="postTime" style="display: inline"> Model.Messages.Last().Message.TimeStamp.Value.ToString("o"); </span>}else{ <text>Never</text> }</small>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="chat-discussion">
                                @foreach (var c in Model.Messages)
                                {
                                    @Html.Partial(partialViewName: "_PartialChatMessage", model: c)
                                }
                                <div id="endMessages">

                                </div>

                            </div>
                            <div class="chat-discussion" style="height:200px;">
                                <br /><br />
                            </div>
                        </div>
                    </div>
                </div>
                
            </div>
        </div>
    </div>
    <div class="row" style="position: fixed; bottom:15px; width: 100%">
        <div class="col-lg-3">
        </div>
        <div class="col-lg-6">
            <div class="ibox chat-view">
                <div class="row">
                    <div class="col-md-12 ">
                        <div class="chatReply ibox-content">
                            <div class="sk-spinner sk-spinner-three-bounce">
                                <div class="sk-bounce1"></div>
                                <div class="sk-bounce2"></div>
                                <div class="sk-bounce3"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="chat-message-form">
                                        <div class="m_input wrapper p-md" id="message_input"></div>
                                    </div>
                                    <div class="chat-message-form">
                                        <button id="btnMessageSend" type="button" class="btn btn-primary" onclick="sendMessage(@Model.OtherUser.Id);">Send</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script type="text/javascript">
    var ChattingWithId = "@Model.OtherUser.AppId";
    $(document).ready(function () {
        // Collapse ibox function
        $('.collapse-link').on('click', function () {
            var ibox = $(this).closest('div.ibox');
            if (typeof $(this).data('id') !== 'undefined') {
                ibox = $('#' + $(this).data('id'));
            }
            var button = $(this).find('i');
            var content = ibox.children('.ibox-content');
            content.slideToggle(200);
            button.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');
            ibox.toggleClass('').toggleClass('border-bottom');
            setTimeout(function () {
                ibox.resize();
                ibox.find('[id^=map-]').resize();
            }, 50);
        });

        // Close ibox function
        $('.close-link').on('click', function () {
            var content = $(this).closest('div.ibox');
            content.remove();
        });

        $(".m_input").summernote({
            callbacks: {
                onImageUpload: function (files) {
                    that = $(this);
                    sendFile(files[0], that);
                }
            },
            focus: false,
            placeholder: 'Write message...',
            disableDragAndDrop: false,
            dialogsInBody: true,
            toolbar: ['bold', 'italic', 'underline', 'strikethrough', 'fontsize', 'color', 'link'],
            minHeight: 100,
            maxHeight: 600,
            hint: {
                match: /\B@@(\w*)$/,
                search: function (keyword, callback) {
                    if (!keyword.length) return callback();
                    var msg = JSON.stringify({ 'searchstr': keyword.toString() })
                    $.ajax({
                        async: true,
                        url: '/Comment/GetMentions',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        data: msg,
                        error: function () {
                            callback();
                        },
                        success: function (res) {
                            callback(res.users);
                        }
                    });
                },
                content: function (item) {
                    return $("<span class='badge badge-info userhint'>").html('@@' + item)[0];
                }
            }
        });
        window.scrollTo(0, document.body.scrollHeight+50);
    });

    var sendMessage = function (id) {
        var dataString;
        var action = "/Messages/SendMessage";
        var contentType = "application/json; charset=utf-8";
        var dataval = '';
        var dataString = '';
        var messageElement = '#message_input';
        dataval = $(messageElement).summernote('code');
        dataString = JSON.stringify({ id: id, content: dataval, isChat: true });
        $('#chatReply').addClass('sk-loading');
        $.ajax({
            type: "POST",
            url: action,
            data: dataString,
            dataType: "json",
            contentType: contentType,
            success: function (response) {
                if (response.success) {
                    $(".m_input").summernote('reset');
                    $.ajax({
                        type: "POST",
                        url: "/Messages/GetMessage",
                        data: JSON.stringify({ 'id': response.id, 'userId':@Model.ThisUser.Id }),
                        dataType: "json",
                        contentType: contentType,
                        success: function (result) {
                            $("#endMessages").append(result.HTMLString);
                            $('.postTime').each(function (i, e) {
                                var time = moment.utc($(e).html()).local().calendar();
                                var date = moment.utc($(e).html()).local().format("DD MMM YYYY");
                                $(e).html('<span>' + time + ' - ' + date + '</span>');
                                $(e).css('display', 'inline');
                                $(e).removeClass("postTime");
                            });
                            window.scrollTo(0, document.body.scrollHeight+10);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert("fail");
                        }
                    });

                    $('#chatReply').removeClass('sk-loading');
                }
                else {
                    $('#chatReply').removeClass('sk-loading');
                    alert(response.message);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("fail");
            }
        });

    }
</script>
}
