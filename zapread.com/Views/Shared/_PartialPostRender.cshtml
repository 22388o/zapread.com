@using Microsoft.AspNet.Identity;
@using zapread.com.Helpers;
@using zapread.com.Models;
@model zapread.com.Models.PostViewModel

<div class="social-feed-box" id=@("post_" + @Model.Post.PostId.ToString())>
    <div class="pull-right social-action dropdown">
        <button data-toggle="dropdown" class="dropdown-toggle btn-white"></button>
        <ul class="dropdown-menu m-t-xs">
            @if (Model.ViewerIgnoredUser)
            {
                <li>
                    <button class="btn btn-link btn-sm" onclick="alert('Not yet implemented.')"><i class="fa fa-eye"></i> Show Post</button>
                </li>
            }
            @if (User.Identity.Name == Model.Post.UserId.Name)
            {
                using (Html.BeginForm("Edit", "Post",
                    new { ReturnUrl = ViewBag.ReturnUrl },
                    FormMethod.Post,
                    new { role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("PostId", Model.Post.PostId)
                    <li>
                        <button class="btn btn-link btn-sm" type="submit"><i class="fa fa-edit"></i> Edit</button>
                    </li>
                }
                <li>
                    <button class="btn btn-link btn-sm" type="submit" onclick="deletePost(@Model.Post.PostId)"><i class="fa fa-times"></i> Delete</button>
                </li>
            }
            else
            {
                <li>
                    <button class="btn btn-link btn-sm" type="submit" onclick="alert('Not yet implemented.')"><i class="fa fa-globe"></i> Translate</button>
                </li>
                <li>
                    <button class="btn btn-link btn-sm" type="submit"><i class="fa fa-flag"></i> Report Spam</button>
                </li>
            }

            @if (User.IsInRole("Administrator"))
            {
                using (Html.BeginForm("Edit", "Post",
                    new { ReturnUrl = ViewBag.ReturnUrl },
                    FormMethod.Post,
                    new { role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("PostId", Model.Post.PostId)
                    <li>
                        <button class="btn btn-link btn-sm" type="submit"><i class="fa fa-edit"></i> Edit (Admin)</button>
                    </li>
                }
                <li>
                    <button class="btn btn-link btn-sm" type="submit" onclick="deletePost(@Model.Post.PostId)"><i class="fa fa-times"></i> Delete (Admin)</button>
                </li>
                <li>
                    <button class="btn btn-link btn-sm" type="submit" onclick="setPostLanguage(@Model.Post.PostId)"><i class="fa fa-times"></i> Set Language (Admin)</button>
                </li>
            }

            @if (Model.ViewerIsMod || User.Identity.Name == Model.Post.UserId.Name || User.IsInRole("Administrator"))
            {
                <li>
                    <button class="btn btn-link btn-sm" onclick="nsfwPost(@Model.Post.PostId)"><i class="fa fa-exclamation-triangle"></i> Toggle NSFW</button>
                </li>
                <li>
                    <button class="btn btn-link btn-sm" onclick="nsfwPost(@Model.Post.PostId)"><i class="fa fa-exclamation-triangle"></i> Toggle Explicit</button>
                </li>
            }
            else
            {
                <li>
                    <button class="btn btn-link btn-sm" onclick="alert('Not yet implemented.  Feature coming soon.');"><i class="fa fa-exclamation-triangle"></i> Report NSFW</button>
                </li>
            }

            @if (Model.ViewerIsMod)
            {
                <li>
                    <button class="btn btn-link btn-sm" onclick="stickyPost(@Model.Post.PostId)"><i class="fa fa-map-pin"></i> Toggle Group Sitcky</button>
                </li>
            }

            @if (User.IsInRole("Administrator"))
            {

            }
            <li class="dropdown-submenu pull-left">
                <button class="ddsm btn btn-link btn-sm" onclick="$(this).next('ul').toggle();event.stopPropagation();event.preventDefault();"><i class="fa fa-share-alt"></i> Share</button>
                <ul class="dropdown-menu">
                    <li><div class="sharing" data-url="@Url.Action("Detail", "Post", new { id = Model.Post.PostId }, Request.Url.Scheme)" data-sharetext="ZapRead.com post: @Model.Post.PostTitle - Earn Bitcoin at ZapRead.com"></div></li>
                </ul>
            </li>
        </ul>
    </div>
    <div class="social-avatar">
        @if (!Model.ViewerIgnoredUser)
        {
            <a href="@Url.Action(actionName: "Index", controllerName: "User", routeValues: new { username = Model.Post.UserId.Name })" class="pull-left">
                <img class="img-circle" src="@Url.Action("UserImage", "Home", new { size = 30, UserId = Model.Post.UserId.AppId })" />
            </a>
        }
        <div class="media-body">
            <a class="pop" data-container="body" data-toggle="popover" data-offset="-28vw" data-placement="top"
               data-content="<a href='@Url.Action(actionName:"Chat", controllerName: "Messages", routeValues: new { username = Model.Post.UserId.Name })' class='btn btn-sm btn-link' data-toggle='tooltip' data-placement='bottom' title='Private chat'><i class='fa fa-envelope'></i> </a>&nbsp;<a href='javascript:void(0);' class='btn btn-sm btn-link' data-toggle='tooltip' data-placement='bottom' title='Follow' onclick='follow(@Model.Post.UserId.Id,1);'><i class='fa fa-user-plus'></i></a><a href='javascript:void(0);' class='btn btn-sm btn-link' data-toggle='tooltip' data-placement='bottom' title='Tip' onclick='alert(&quot;Not yet implemented.&quot;);'><i class='fa fa-bolt'></i> </a><a href='javascript:void(0);' class='btn btn-sm btn-link' data-toggle='tooltip' data-placement='bottom' title='Ignore' onclick='alert(&quot;Not yet implemented.  Please go to user page to ignore.&quot;);'><i class='fa fa-minus-circle'></i> </a>"
               data-original-title="" title="" href="@Url.Action(actionName: "Index", controllerName: "User", routeValues: new { username = Model.Post.UserId.Name.Trim() })">
                @if (Model.ViewerIgnoredUser)
                {
                    <text>(Ignored) </text>
                }
                @Model.Post.UserId.Name
            </a>
            @if (Model.Post.IsSticky)
            {
                <span title="Sticky"><i class="fa fa-map-pin" style="color: lightgreen;"></i></span>
            }
            posted in
            <a class="pop" data-container="body" data-toggle="popover" data-placement="top"
               data-content="<span class='btn btn-sm btn-link' data-toggle='tooltip' data-placement='bottom' title='Tier'>@Model.GroupLevels[Model.Post.Group.GroupId]<i class='fa fa-arrow-up'></i></span><span class='btn btn-sm btn-link' data-toggle='tooltip' data-placement='bottom' title='Posts'>@Model.GroupPostCounts[Model.Post.Group.GroupId] <i class='fa fa-pencil'></i></span><span class='btn btn-sm btn-link' data-toggle='tooltip' data-placement='bottom' title='Members'>@Model.GroupMemberCounts[Model.Post.Group.GroupId] <i class='fa fa-user'></i></span><a href='javascript:void(0);' class='btn btn-sm btn-link' data-toggle='tooltip' data-placement='bottom' title='Join' onclick='alert(&quot;Not yet implemented. Check back soon&quot;);'><i class='fa fa-plus'></i></a>"
               data-original-title="" title="" href="@Url.Action(actionName: "GroupDetail", controllerName: "Group", routeValues: new { id = Model.Post.Group.GroupId })" style="font-size: small; display: inline">
                @Model.Post.Group.GroupName
            </a>
            <small class="postTime text-muted" style="display: none">@Model.Post.TimeStamp.Value.ToString("o")</small>
            @if (Model.Post.TimeStampEdited != null)
            {
                <span class="text-muted" style="display:inline"> edited </span>
                <small class="postTime text-muted" style="display: none">@Model.Post.TimeStampEdited.Value.ToString("o")</small>
            }
        </div>
    </div>
    <div class="social-body" @if (Model.ViewerIgnoredUser) { <text> style="display: none" </text> }>
        <div class="row">
            <div class="col-sm-auto vote-actions">
                <div class="vote-actions">
                    <a href="#/" onclick="vote(@Model.Post.PostId, 1, 1, 100)" class="@(Model.ViewerUpvoted ? "" : "text-muted ")" id="uVote_@Model.Post.PostId">
                        <i class="fa fa-chevron-up"> </i>
                    </a>
                    <div id="sVote_@Model.Post.PostId">@Model.Post.Score.ToAbbrString()</div>
                    <a href="#/" onclick="vote(@Model.Post.PostId, 0, 1, 100)" class="@(Model.ViewerDownvoted ? "" : "text-muted ")" id="dVote_@Model.Post.PostId">
                        <i class="fa fa-chevron-down"> </i>
                    </a>
                </div>
            </div>
            <div class="col">
                <h3>
                    <a href="@Url.Action("Detail", "Post", new { id = Model.Post.PostId })">
                        @if (Model.Post.PostTitle == null)
                        {
                            <text>Post</text>
                        }
                        else
                        {
                            @Model.Post.PostTitle
                        }
                    </a>
                </h3>
                @*<p>*@
                <div @if (!Model.IsDetailView) { <text> class="post-box" </text> }>
                    <div @if (!Model.IsDetailView) { <text> class="post-content" </text> }>
                        @Html.Raw(Model.Post.Content)
                    </div>
                    @if (Model.Post.IsNSFW)
                    {
                        <div id="nsfw_@Model.Post.PostId" style="position:absolute;top:0;left:0;width:100%;height:100%;background-color:white"></div>
                        <button id="nsfwb_@Model.Post.PostId" class="btn btn-danger" style="position:absolute;top:0;left:0" onclick="showNSFW(@Model.Post.PostId)">Show NSFW</button>
                    }
                    @if (!Model.IsDetailView)
                    {
                        <p class="read-more-button"><a href="javascript:void(0);" class="button btn btn-primary" onclick="readMoreButton(this);">Read More</a></p>
                    }

                </div>
                @*</p>*@
                <br />
            </div>

        </div>
        <div class="row">

            @*@if (Request.IsAuthenticated)
                {
                    <div class="col col-auto" data-toggle="tooltip" data-placement="bottom" title="Reply">
                        <a href="javascript:void(0);" onclick="showReply(@Model.Post.PostId)" class="btn-link btn btn-sm"><i class="fa fa-reply"></i></a>
                    </div>
                }*@
            <div class="col col-auto" @*data-toggle="tooltip" data-placement="bottom" title="Discuss"*@>
                <a href="javascript:void(0);" onclick="toggleChat(@Model.Post.PostId)" class="btn-link btn btn-sm"><span class="badge badge-light">@Model.Post.Comments.Count()</span> <i class="fa fa-comments"></i> Discuss</a>
            </div>
        </div>
    </div>
    @if (Request.IsAuthenticated)
    {
        <div id=@("preply_" + @Model.Post.PostId.ToString()) class="social-footer" @if (Model.NumComments < 1) { <text> style="display: none" </text> }>
            <div id="pc_@Model.Post.PostId.ToString()" class="social-comment">
                <div class="ibox-content no-padding ibox-comment">
                    <div class="sk-spinner sk-spinner-three-bounce">
                        <div class="sk-bounce1"></div>
                        <div class="sk-bounce2"></div>
                        <div class="sk-bounce3"></div>
                    </div>
                    <a href="@Url.Action(actionName: "Index", controllerName: "Manage")" class="pull-left">
                        <img class="img-circle" src="@Url.Action("UserImage", "Home", new { size = 30 })" />
                    </a>
                    <div class="media-body">
                        <div class="row">
                            <div class="col">
                                <div class="ibox-content no-padding">
                                    <div class="@("c_input_" + @Model.Post.PostId.ToString()) wrapper p-md" id="c_input_@Model.Post.PostId.ToString()"></div>
                                </div>
                            </div>
                            <div class="col-sm-auto">
                                <div class="btn-group-vertical">
                                    <button id="bc_@Model.Post.PostId.ToString()" class="btn btn-sm btn-outline btn-primary" type="submit" onclick="submitCommentA(@Model.Post.PostId.ToString(), 0, false)">Submit <span id="cs_@Model.Post.PostId.ToString()" class="loading open-circle" style="display:none"></span></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div id=@("comments_" + @Model.Post.PostId.ToString()) @if (Model.NumComments < 1) { <text> style="display: none" </text> }>
        @if (Model.Post.Comments != null)
        {
            foreach (var comment in Model.Post.Comments.Where(cmt => !cmt.IsReply).OrderByDescending(cmt => cmt.Score).ThenByDescending(cmt => cmt.TimeStamp))
            {
                @Html.Partial(partialViewName: "_PartialCommentRender", model: new PostCommentsViewModel { Comment = comment, Comments = Model.Post.Comments.ToList(), ViewerIgnoredUsers = Model.ViewerIgnoredUsers })
            }
        }
    </div>

</div>
