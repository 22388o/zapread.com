@model zapread.com.Models.UserViewModel

@{
    ViewBag.Title = "User";
    ViewBag.ViewInfo = "User:" + Model.User.Id;
}

@section Styles {
    @Styles.Render("~/Content/plugins/dropzone/dropZoneStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dropZone")
    @Scripts.Render("~/plugins/moment")

    <script type="text/javascript">
        var ub = @Model.UserBalance;
        var IsAuthenticated = "@Request.IsAuthenticated" == "True";

        $(document).ready(function () {
            // This loads all partial views on page
            $(".partialContents").each(function (index, item) {
                var url = $(item).data("url");
                if (url && url.length > 0) {
                    $(item).load(url);
                }
                console.log("parial load " + item.id);
            });

            // This formats the timestamps on the page
            $('.eventTime').each(function (i, e) {
                var time = moment.utc($(e).html()).local().calendar();
                var date = moment.utc($(e).html()).local().format("DD MMM YYYY");
                $(e).html('<span>' + time + ' - ' + date + '</span>');
            });

            // Add slimscroll to element
            $('.scroll_content').slimscroll({
                height: ''
            })

            // Collapse ibox function
            $('.collapse-link').on('click', function () {
                var ibox = $(this).closest('div.ibox');
                var button = $(this).find('i');
                var content = ibox.children('.ibox-content');
                content.slideToggle(200);
                button.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');
                ibox.toggleClass('').toggleClass('border-bottom');
                setTimeout(function () {
                    ibox.resize();
                    ibox.find('[id^=map-]').resize();
                }, 50);
            });

            // Close ibox function
            $('.close-link').on('click', function () {
                var content = $(this).closest('div.ibox');
                content.remove();
            });
        });

        var follow = function (uid, s) {

            var msg = JSON.stringify({ 'id': uid, 's': s });
            $.ajax({
                type: "POST",
                url: "/user/SetFollowing",
                data: msg,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response.Result === "Success") {
                        if (s === 1) {
                            // Subscribe
                            $('#subBtnText').html("Unsubscribe");
                            $('#sublink').attr("onclick", "follow(@Model.User.Id,0);");//.onclick = follow(@Model.User.Id,0);
                        } else {
                            $('#subBtnText').html("Subscribe");
                            $('#sublink').attr("onclick", "follow(@Model.User.Id,1);");
                        }
                    }
                    else {
                        alert(response.Message);
                    }
                },
                failure: function (response) {
                    console.log('follow failure');
                },
                error: function (response) {
                    console.log('follow error');
                }
            });
            return false;
        };

        Dropzone.options.dropzoneForm = {
            paramName: "file", // The name that will be used to transfer the file
            maxFilesize: 5, // MB
            acceptedFiles: "image/*",
            maxFiles: 1,
            addRemoveLinks: true,
            init: function () {
                this.on("addedfile", function () {
                    if (this.files[1] != null) {
                        this.removeFile(this.files[0]);
                    }
                });
            },
            dictDefaultMessage: "<strong>Drop files here or click to upload. </strong>"
        };
    </script>
}

@Html.Partial(partialViewName: "_PartialModalVote")                   @*This is the code for the modal dialog box to vote*@

@Html.Partial(partialViewName: "_PartialModalMessageCompose")         @*This is the code for the modal dialog box to send a message*@

<div class="modal inmodal" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        @Html.Partial(partialViewName: "_ModalAboutMe", model: @Model.AboutMe)
    </div>
</div>

<div class="modal inmodal" id="ModalProfileImage" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-header">
            <h5 class="modal-title">Update Profile Image</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Profile Image</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("UpdateProfileImage", "Manage", FormMethod.Post, new { @class = "dropzone", id = "dropzoneForm", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="fallback">
                        <input name="file" type="file" />
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Done</button>
            </div>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content">
    <div class="row animated fadeInRight">
        <div class="col-md-4">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Profile Detail</h5>
                </div>
                <div>
                    <div class="ibox-content no-padding border-left-right">
                        <img class="img-fluid" src="@Url.Action("UserImage", "Home", new {size = 500, UserId = Model.User.AppId})" />
                    </div>
                    <div class="ibox-content profile-content">
                        <h4>
                            <strong>
                                <img class="img-circle" src="@Url.Action("UserImage", "Home", new {size = 30, UserId = Model.User.AppId})" /> @Model.User.Name
                            </strong>
                        </h4>
                        <p><i class="fa fa-star"></i> Reputation @Model.User.Reputation</p>
                        <h5>
                            About me
                        </h5>
                        <p>
                            @Model.AboutMe.AboutMe
                        </p>
                        <div class="row m-t-lg">
                            <div class="col-md-4">

                                <h5><strong>@Model.NumPosts</strong> Posts</h5>
                            </div>
                            <div class="col-md-4">

                                <h5><strong>@Model.NumFollowing</strong> Following</h5>
                            </div>
                            <div class="col-md-4">

                                <h5><strong>@Model.NumFollowers</strong> Followers</h5>
                            </div>
                        </div>
                        <div class="user-button">
                            <div class="row">
                                <div class="col-md-4">
                                    <a href="#" data-toggle="modal" data-target="#messageComposeModal" class="btn btn-primary btn-sm btn-block">
                                        <i class="fa fa-envelope"></i> Message
                                    </a>
                                </div>
                                <div class="col-md-4">
                                    <button type="button" class="btn btn-default btn-sm btn-block" onclick="tip('@Model.User.Name', @Model.User.Id);"><i class="fa fa-bolt"></i> Send a tip</button>
                                </div>
                                <div class="col-md-4">
                                    @if (Request.IsAuthenticated)
                                    {
                                        if (Model.IsFollowing)
                                        {
                                            <a id="sublink" class="btn btn-warning btn-sm btn-block" onclick="follow(@Model.User.Id,0)"><i class="fa fa-user"></i> <span id="subBtnText">UnSubscribe</span> </a>
                                        }
                                        else
                                        {
                                            <a id="sublink" class="btn btn-default btn-sm btn-block" onclick="follow(@Model.User.Id,1)"><i class="fa fa-user"></i> <span id="subBtnText">Subscribe</span></a>
                                        }
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-default btn-sm btn-block" disabled><i class="fa fa-user"></i> Subscribe</button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="ibox">
                    <div class="ibox-content">
                        <h3>Top Subscribed</h3>
                        <p class="small">
                            @Model.User.Name is subscribed to content from these users.  Their content will appear in the activity feed.
                        </p>
                        <div class="user-friends">
                            @foreach (var u in Model.TopFollowing)
                            {
                                <a href="@Url.Action(actionName: "Index", controllerName: "User", routeValues: new { username = u.Name })">
                                    <img class="img-circle" title="@u.Name" src="@Url.Action("UserImage", "Home", new {size = 30, UserId = u.AppId})" />
                                </a>
                            }
                        </div>
                    </div>
                </div>

                <div class="ibox">
                    <div class="ibox-content">
                        <h3>Top Subscribing</h3>
                        <p class="small">
                            These users are subscribing to @Model.User.Name.  @Model.User.Name's content will appear in their activity feed.
                        </p>
                        <div class="user-friends">
                            @foreach (var u in Model.TopFollowers)
                            {
                                <a href="@Url.Action(actionName: "Index", controllerName: "User", routeValues: new { username = u.Name })">
                                    <img class="img-circle" title="@u.Name" src="@Url.Action("UserImage", "Home", new {size = 30, UserId = u.AppId})" />
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Activites</h5>
                    <div class="ibox-tools">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="#">Config option 1</a>
                            </li>
                            <li>
                                <a href="#">Config option 2</a>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="ibox-content">
                    <div>
                        @foreach (var p in Model.ActivityPosts)
                        {
                            @Html.Partial(partialViewName: "_PartialPostRender", model: p)
                        }
                        <button class="btn btn-primary btn-block m"><i class="fa fa-arrow-down"></i> Show More</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

